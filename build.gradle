plugins {
    id 'java'
}

group 'com.claudiodornelles'

repositories {
    mavenCentral()
}

def junitVersion = '5.8.1'
def mockitoVersion = '4.0.0'
def springVersion = '5.3.12'
def slf4jVersion = '1.7.32'
def log4jVersion = '2.14.1'

dependencies {
    implementation([
            "org.springframework:spring-context:${springVersion}",
            "org.springframework:spring-core:${springVersion}",
            "org.springframework:spring-beans:${springVersion}",
            "org.slf4j:slf4j-api:${slf4jVersion}",
            "org.slf4j:slf4j-log4j12:${slf4jVersion}",
            "org.apache.logging.log4j:log4j-core:${log4jVersion}"
    ])
    testImplementation([
            "org.junit.jupiter:junit-jupiter-api:${junitVersion}",
            "org.springframework:spring-test:${springVersion}",
            "org.mockito:mockito-junit-jupiter:${mockitoVersion}",
    ])
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

test {
    useJUnitPlatform()
}

jar {
    manifest.attributes 'Main-Class': 'com.claudiodornelles.data.impl.Main'
    duplicatesStrategy = 'include'
    from sourceSets.main.output
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') } .collect { zipTree(it) }
    }
}